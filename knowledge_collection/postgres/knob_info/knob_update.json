{
    "disk_type_related": [
        "wal_sync_method",
        "wal_skip_threshold",
        "vacuum_cost_page_dirty",
        "data_sync_retry",
        "maintenance_io_concurrency",
        "checkpoint_timeout",
        "bgwriter_flush_after",
        "seq_page_cost",
        "backend_flush_after",
        "checkpoint_flush_after",
        "checkpoint_completion_target",
        "random_page_cost",
        "effective_io_concurrency"
    ],
    "disk_size_related": [
        "wal_keep_size",
        "wal_compression",
        "wal_skip_threshold",
        "old_snapshot_threshold",
        "log_rotation_size",
        "temp_file_limit",
        "max_slot_wal_keep_size",
        "min_wal_size",
        "bgwriter_flush_after",
        "log_temp_files",
        "archive_mode",
        "autovacuum_vacuum_cost_limit",
        "max_wal_size",
        "wal_writer_flush_after",
        "autovacuum_naptime",
        "logical_decoding_work_mem"
    ],
    "cpu_related": [
        "parallel_leader_participation",
        "wal_compression",
        "max_worker_processes",
        "max_connections",
        "max_parallel_maintenance_workers",
        "autovacuum_naptime",
        "cpu_index_tuple_cost",
        "max_sync_workers_per_subscription",
        "vacuum_cost_delay",
        "parallel_tuple_cost",
        "cpu_tuple_cost",
        "max_parallel_workers",
        "seq_page_cost",
        "parallel_setup_cost",
        "jit_inline_above_cost",
        "huge_pages",
        "cpu_operator_cost",
        "max_parallel_workers_per_gather"
    ],
    "ram_related": [
        "max_connections",
        "autovacuum_naptime",
        "work_mem",
        "huge_pages",
        "maintenance_work_mem",
        "track_activity_query_size",
        "hash_mem_multiplier",
        "autovacuum_work_mem",
        "effective_cache_size",
        "log_temp_files",
        "vacuum_cost_page_hit",
        "shared_buffers",
        "temp_buffers",
        "random_page_cost",
        "wal_buffers",
        "max_parallel_workers_per_gather",
        "logical_decoding_work_mem"
    ]
}